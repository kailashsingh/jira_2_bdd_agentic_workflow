{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nlet StudyTableComponent = class StudyTableComponent {\n  constructor() {\n    this.displayedColumns = ['batch', 'date', 'time', 'status', 'pr', 'action'];\n    this.dataSource = [{\n      id: '1',\n      batch: 'BATCH-001',\n      date: '2024-01-15',\n      time: '09:30',\n      status: 'validated',\n      pr: 'PR-001'\n    }, {\n      id: '2',\n      batch: 'BATCH-002',\n      date: '2024-01-15',\n      time: '14:15',\n      status: 'pending',\n      pr: 'PR-002'\n    }, {\n      id: '3',\n      batch: 'BATCH-001',\n      date: '2024-01-14',\n      time: '11:45',\n      status: 'error',\n      pr: 'PR-003'\n    }, {\n      id: '4',\n      batch: 'BATCH-003',\n      date: '2024-01-14',\n      time: '16:20',\n      status: 'validated',\n      pr: 'PR-004'\n    }, {\n      id: '5',\n      batch: 'BATCH-002',\n      date: '2024-01-13',\n      time: '13:10',\n      status: 'pending',\n      pr: 'PR-005'\n    }];\n  }\n  getStatusIcon(status) {\n    switch (status) {\n      case 'validated':\n        return 'check_circle';\n      case 'pending':\n        return 'schedule';\n      case 'error':\n        return 'error';\n      default:\n        return 'help';\n    }\n  }\n  getStatusIconClass(status) {\n    switch (status) {\n      case 'validated':\n        return 'text-green-600';\n      case 'pending':\n        return 'text-yellow-600';\n      case 'error':\n        return 'text-red-600';\n      default:\n        return '';\n    }\n  }\n};\nStudyTableComponent = __decorate([Component({\n  selector: 'app-study-table',\n  standalone: true,\n  imports: [CommonModule, MatTableModule, MatButtonModule, MatChipsModule, MatIconModule],\n  template: `\n    <div class=\"border rounded-lg overflow-hidden\">\n      <table mat-table [dataSource]=\"dataSource\" class=\"w-full\">\n        \n        <!-- Batch Column -->\n        <ng-container matColumnDef=\"batch\">\n          <th mat-header-cell *matHeaderCellDef>Batch</th>\n          <td mat-cell *matCellDef=\"let element\">\n            <mat-chip-set>\n              <mat-chip>{{ element.batch }}</mat-chip>\n            </mat-chip-set>\n          </td>\n        </ng-container>\n\n        <!-- Date Column -->\n        <ng-container matColumnDef=\"date\">\n          <th mat-header-cell *matHeaderCellDef>Date</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.date }}</td>\n        </ng-container>\n\n        <!-- Time Column -->\n        <ng-container matColumnDef=\"time\">\n          <th mat-header-cell *matHeaderCellDef>Time</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.time }}</td>\n        </ng-container>\n\n        <!-- Status Column -->\n        <ng-container matColumnDef=\"status\">\n          <th mat-header-cell *matHeaderCellDef>Status</th>\n          <td mat-cell *matCellDef=\"let element\">\n            <div class=\"flex items-center gap-2\">\n              <mat-icon [ngClass]=\"getStatusIconClass(element.status)\">\n                {{ getStatusIcon(element.status) }}\n              </mat-icon>\n              <span class=\"capitalize text-sm\">{{ element.status }}</span>\n            </div>\n          </td>\n        </ng-container>\n\n        <!-- PR Column -->\n        <ng-container matColumnDef=\"pr\">\n          <th mat-header-cell *matHeaderCellDef>PR</th>\n          <td mat-cell *matCellDef=\"let element\">\n            <mat-chip-set>\n              <mat-chip color=\"accent\">{{ element.pr }}</mat-chip>\n            </mat-chip-set>\n          </td>\n        </ng-container>\n\n        <!-- Action Column -->\n        <ng-container matColumnDef=\"action\">\n          <th mat-header-cell *matHeaderCellDef class=\"w-100\">Action</th>\n          <td mat-cell *matCellDef=\"let element\">\n            <button mat-icon-button>\n              <mat-icon>chevron_right</mat-icon>\n            </button>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n    </div>\n  `,\n  styles: [`\n    .border { border: 1px solid var(--border, rgba(0, 0, 0, 0.1)); }\n    .rounded-lg { border-radius: 0.5rem; }\n    .overflow-hidden { overflow: hidden; }\n    .w-full { width: 100%; }\n    .w-100 { width: 100px; }\n    .flex { display: flex; }\n    .items-center { align-items: center; }\n    .gap-2 { gap: 0.5rem; }\n    .capitalize { text-transform: capitalize; }\n    .text-sm { font-size: 0.875rem; }\n    \n    .text-green-600 { color: #059669; }\n    .text-yellow-600 { color: #d97706; }\n    .text-red-600 { color: #dc2626; }\n    \n    mat-icon.h-4 { font-size: 1rem; height: 1rem; width: 1rem; }\n  `]\n})], StudyTableComponent);\nexport { StudyTableComponent };","map":{"version":3,"names":["Component","CommonModule","MatTableModule","MatButtonModule","MatChipsModule","MatIconModule","StudyTableComponent","constructor","displayedColumns","dataSource","id","batch","date","time","status","pr","getStatusIcon","getStatusIconClass","__decorate","selector","standalone","imports","template","styles"],"sources":["F:\\aaa\\jira_2_bdd_agentic_workflow\\angular\\src\\app\\components\\study-table\\study-table.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\n\nexport interface StudyEntry {\n  id: string;\n  batch: string;\n  date: string;\n  time: string;\n  status: 'validated' | 'pending' | 'error';\n  pr: string;\n}\n\n@Component({\n  selector: 'app-study-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatButtonModule,\n    MatChipsModule,\n    MatIconModule\n  ],\n  template: `\n    <div class=\"border rounded-lg overflow-hidden\">\n      <table mat-table [dataSource]=\"dataSource\" class=\"w-full\">\n        \n        <!-- Batch Column -->\n        <ng-container matColumnDef=\"batch\">\n          <th mat-header-cell *matHeaderCellDef>Batch</th>\n          <td mat-cell *matCellDef=\"let element\">\n            <mat-chip-set>\n              <mat-chip>{{ element.batch }}</mat-chip>\n            </mat-chip-set>\n          </td>\n        </ng-container>\n\n        <!-- Date Column -->\n        <ng-container matColumnDef=\"date\">\n          <th mat-header-cell *matHeaderCellDef>Date</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.date }}</td>\n        </ng-container>\n\n        <!-- Time Column -->\n        <ng-container matColumnDef=\"time\">\n          <th mat-header-cell *matHeaderCellDef>Time</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.time }}</td>\n        </ng-container>\n\n        <!-- Status Column -->\n        <ng-container matColumnDef=\"status\">\n          <th mat-header-cell *matHeaderCellDef>Status</th>\n          <td mat-cell *matCellDef=\"let element\">\n            <div class=\"flex items-center gap-2\">\n              <mat-icon [ngClass]=\"getStatusIconClass(element.status)\">\n                {{ getStatusIcon(element.status) }}\n              </mat-icon>\n              <span class=\"capitalize text-sm\">{{ element.status }}</span>\n            </div>\n          </td>\n        </ng-container>\n\n        <!-- PR Column -->\n        <ng-container matColumnDef=\"pr\">\n          <th mat-header-cell *matHeaderCellDef>PR</th>\n          <td mat-cell *matCellDef=\"let element\">\n            <mat-chip-set>\n              <mat-chip color=\"accent\">{{ element.pr }}</mat-chip>\n            </mat-chip-set>\n          </td>\n        </ng-container>\n\n        <!-- Action Column -->\n        <ng-container matColumnDef=\"action\">\n          <th mat-header-cell *matHeaderCellDef class=\"w-100\">Action</th>\n          <td mat-cell *matCellDef=\"let element\">\n            <button mat-icon-button>\n              <mat-icon>chevron_right</mat-icon>\n            </button>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n    </div>\n  `,\n  styles: [`\n    .border { border: 1px solid var(--border, rgba(0, 0, 0, 0.1)); }\n    .rounded-lg { border-radius: 0.5rem; }\n    .overflow-hidden { overflow: hidden; }\n    .w-full { width: 100%; }\n    .w-100 { width: 100px; }\n    .flex { display: flex; }\n    .items-center { align-items: center; }\n    .gap-2 { gap: 0.5rem; }\n    .capitalize { text-transform: capitalize; }\n    .text-sm { font-size: 0.875rem; }\n    \n    .text-green-600 { color: #059669; }\n    .text-yellow-600 { color: #d97706; }\n    .text-red-600 { color: #dc2626; }\n    \n    mat-icon.h-4 { font-size: 1rem; height: 1rem; width: 1rem; }\n  `]\n})\nexport class StudyTableComponent {\n  displayedColumns: string[] = ['batch', 'date', 'time', 'status', 'pr', 'action'];\n  \n  dataSource: StudyEntry[] = [\n    {\n      id: '1',\n      batch: 'BATCH-001',\n      date: '2024-01-15',\n      time: '09:30',\n      status: 'validated',\n      pr: 'PR-001'\n    },\n    {\n      id: '2',\n      batch: 'BATCH-002',\n      date: '2024-01-15',\n      time: '14:15',\n      status: 'pending',\n      pr: 'PR-002'\n    },\n    {\n      id: '3',\n      batch: 'BATCH-001',\n      date: '2024-01-14',\n      time: '11:45',\n      status: 'error',\n      pr: 'PR-003'\n    },\n    {\n      id: '4',\n      batch: 'BATCH-003',\n      date: '2024-01-14',\n      time: '16:20',\n      status: 'validated',\n      pr: 'PR-004'\n    },\n    {\n      id: '5',\n      batch: 'BATCH-002',\n      date: '2024-01-13',\n      time: '13:10',\n      status: 'pending',\n      pr: 'PR-005'\n    }\n  ];\n\n  getStatusIcon(status: string): string {\n    switch (status) {\n      case 'validated':\n        return 'check_circle';\n      case 'pending':\n        return 'schedule';\n      case 'error':\n        return 'error';\n      default:\n        return 'help';\n    }\n  }\n\n  getStatusIconClass(status: string): string {\n    switch (status) {\n      case 'validated':\n        return 'text-green-600';\n      case 'pending':\n        return 'text-yellow-600';\n      case 'error':\n        return 'text-red-600';\n      default:\n        return '';\n    }\n  }\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,aAAa,QAAQ,wBAAwB;AAwG/C,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAAzBC,YAAA;IACL,KAAAC,gBAAgB,GAAa,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC;IAEhF,KAAAC,UAAU,GAAiB,CACzB;MACEC,EAAE,EAAE,GAAG;MACPC,KAAK,EAAE,WAAW;MAClBC,IAAI,EAAE,YAAY;MAClBC,IAAI,EAAE,OAAO;MACbC,MAAM,EAAE,WAAW;MACnBC,EAAE,EAAE;KACL,EACD;MACEL,EAAE,EAAE,GAAG;MACPC,KAAK,EAAE,WAAW;MAClBC,IAAI,EAAE,YAAY;MAClBC,IAAI,EAAE,OAAO;MACbC,MAAM,EAAE,SAAS;MACjBC,EAAE,EAAE;KACL,EACD;MACEL,EAAE,EAAE,GAAG;MACPC,KAAK,EAAE,WAAW;MAClBC,IAAI,EAAE,YAAY;MAClBC,IAAI,EAAE,OAAO;MACbC,MAAM,EAAE,OAAO;MACfC,EAAE,EAAE;KACL,EACD;MACEL,EAAE,EAAE,GAAG;MACPC,KAAK,EAAE,WAAW;MAClBC,IAAI,EAAE,YAAY;MAClBC,IAAI,EAAE,OAAO;MACbC,MAAM,EAAE,WAAW;MACnBC,EAAE,EAAE;KACL,EACD;MACEL,EAAE,EAAE,GAAG;MACPC,KAAK,EAAE,WAAW;MAClBC,IAAI,EAAE,YAAY;MAClBC,IAAI,EAAE,OAAO;MACbC,MAAM,EAAE,SAAS;MACjBC,EAAE,EAAE;KACL,CACF;EA2BH;EAzBEC,aAAaA,CAACF,MAAc;IAC1B,QAAQA,MAAM;MACZ,KAAK,WAAW;QACd,OAAO,cAAc;MACvB,KAAK,SAAS;QACZ,OAAO,UAAU;MACnB,KAAK,OAAO;QACV,OAAO,OAAO;MAChB;QACE,OAAO,MAAM;;EAEnB;EAEAG,kBAAkBA,CAACH,MAAc;IAC/B,QAAQA,MAAM;MACZ,KAAK,WAAW;QACd,OAAO,gBAAgB;MACzB,KAAK,SAAS;QACZ,OAAO,iBAAiB;MAC1B,KAAK,OAAO;QACV,OAAO,cAAc;MACvB;QACE,OAAO,EAAE;;EAEf;CACD;AAvEYR,mBAAmB,GAAAY,UAAA,EA7F/BlB,SAAS,CAAC;EACTmB,QAAQ,EAAE,iBAAiB;EAC3BC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CACPpB,YAAY,EACZC,cAAc,EACdC,eAAe,EACfC,cAAc,EACdC,aAAa,CACd;EACDiB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+DT;EACDC,MAAM,EAAE,CAAC;;;;;;;;;;;;;;;;;GAiBR;CACF,CAAC,C,EACWjB,mBAAmB,CAuE/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}